%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et

{sys, [
    {lib_dirs, ["../deps"]},
    {erts, [{mod_cond, derived}, {app_file, strip}]},
    {app_file, strip},
    {rel, "coffer", "1",[
        kernel,
        stdlib,
        lager,
        crypto,
        public_key,
        ssl,
        ranch,
        cowboy,
        gproc,
        econfig,
        hackney,
        coffercli,
        coffer_dashboard,
        coffer
    ]},
    {rel, "start_clean", "", [kernel,stdlib]},
    {boot_rel, "coffer"},
    {profile, embedded},
    {excl_archive_filters, [".*"]}, %% Do not archive built libs
    {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)",
                        "^erts.*/(doc|info|include|lib|man|src)"]},
    {excl_app_filters, ["\.gitignore"]},

    {app, sasl, [{incl_cond, include}]},
    {app, public_key, [{incl_cond, include}]},
    {app, ssl, [{incl_cond, include}]},


    {app, lager, [{incl_cond, include}]},
    {app, ranch, [{incl_cond, include}]},
    {app, cowboy, [{incl_cond, include}]},
    {app, jsx, [{incl_cond, include}]},
    {app, gproc, [{incl_cond, include}]},
    {app, econfig, [{incl_cond, include}]},
    {app, mimetypes, [{incl_cond, include}]},
    {app, hackney, [{incl_cond, include}]},
    {app, coffercli, [{mod_cond, app}, {incl_cond, include}]},
    {app, coffer_dashboard, [{mod_cond, app}, {incl_cond, include}]},
    {app, coffer, [{mod_cond, app}, {incl_cond, include}]}
]}.

{target_dir, "coffer"}.

{overlay_vars, "vars.config"}.

{overlay, [
    {mkdir, "log"},
    {mkdir, "log/sasl"},
    {copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
    {copy, "files/nodetool", "\{\{erts_vsn\}\}/bin/nodetool"},
    {copy, "files/coffer", "bin/coffer"},
    {copy, "files/coffer.cmd", "bin/coffer.cmd"},
    {copy, "files/start_erl.cmd", "bin/start_erl.cmd"},
    {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"},
    {template, "files/app.config", "etc/app.config"},
    {template, "files/vm.args", "etc/vm.args"},
    {template, "files/coffer.ini", "etc/coffer.ini"}
]}.
